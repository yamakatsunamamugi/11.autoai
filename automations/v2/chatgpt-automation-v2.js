/**
 * @fileoverview ChatGPT Automation V2 - „ÉÜ„Çπ„ÉàÊ∏à„Åø„Ç≥„Éº„Éâ„Éô„Éº„ÇπÁâà
 * 
 * ÁâπÂæ¥:
 * - „ÉÜ„Çπ„ÉàÊ∏à„Åø„ÅÆ„É≠„Ç∏„ÉÉ„ÇØ„Çí„Åù„ÅÆ„Åæ„Åæ‰ΩøÁî®
 * - „É¢„Éá„É´ÈÅ∏Êäû„ÉªÊ©üËÉΩÈÅ∏Êäû„ÉªÂøúÁ≠îÂæÖÊ©ü„Éª„ÉÜ„Ç≠„Çπ„ÉàÂèñÂæó„ÅÆÂÆåÂÖ®ÁßªÊ§ç
 * - Deep Research/„Ç®„Éº„Ç∏„Çß„É≥„Éà„É¢„Éº„ÉâÂØæÂøúÔºàÊúÄÂ§ß40ÂàÜÂæÖÊ©üÔºâ
 * 
 * @version 2.1.0
 */
(function() {
    'use strict';
    
    console.log(`ChatGPT Automation V2 - ÂàùÊúüÂåñÊôÇÂàª: ${new Date().toLocaleString('ja-JP')}`);
    
    // ui-selectors„Åã„Çâ„Ç§„É≥„Éù„Éº„ÉàÔºàChromeÊã°ÂºµÊ©üËÉΩ„ÅÆ„Ç§„É≥„Ç∏„Çß„ÇØ„Éà„Ç≥„É≥„ÉÜ„Ç≠„Çπ„ÉàÔºâ
    const UI_SELECTORS = window.UI_SELECTORS || {};
    const ChatGPTSelectors = UI_SELECTORS.ChatGPT || {};
    
    // ========================================
    // „Çª„É¨„ÇØ„ÇøÂÆöÁæ©Ôºàui-selectors„Åã„Çâ„Éû„Éº„Ç∏„ÄÅ„Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØ‰ªò„ÅçÔºâ
    // ========================================
    const SELECTORS = {
        // „É¢„Éá„É´Èñ¢ÈÄ£
        modelButton: [
            '[data-testid="model-switcher-dropdown-button"]',
            'button[aria-label*="„É¢„Éá„É´ „Çª„É¨„ÇØ„Çø„Éº"]',
            'button[aria-label*="„É¢„Éá„É´"][aria-haspopup="menu"]',
            '#radix-\\:r2m\\:',
            'button.group.flex.cursor-pointer[aria-haspopup="menu"]'
        ],
        modelMenu: [
            '[role="menu"][data-radix-menu-content]',
            '[role="menu"][data-state="open"]',
            'div.z-50.max-w-xs.rounded-2xl.popover[role="menu"]',
            '[aria-labelledby*="radix"][role="menu"]',
            'div[data-radix-popper-content-wrapper] [role="menu"]'
        ],
        legacyButton: [
            '[data-testid="„É¨„Ç¨„Ç∑„Éº„É¢„Éá„É´-submenu"]',
            '[role="menuitem"][data-has-submenu]:contains("„É¨„Ç¨„Ç∑„Éº„É¢„Éá„É´")',
            'div.__menu-item:contains("„É¨„Ç¨„Ç∑„Éº„É¢„Éá„É´")',
            '[role="menuitem"][aria-haspopup="menu"]:last-of-type'
        ],
        legacyMenu: [
            '[role="menu"][data-side="right"]',
            'div[data-side="right"][role="menu"]',
            '[role="menu"]:not([data-side="bottom"])',
            'div.mt-2.max-h-\\[calc\\(100vh-300px\\)\\][role="menu"]'
        ],
        // Ê©üËÉΩÈñ¢ÈÄ£
        menuButton: [
            '[data-testid="composer-plus-btn"]',
            'button[aria-haspopup="menu"]',
            '#radix-\\:R2eij4im4pact9a4mj5\\:',
            'button.composer-btn',
            'div[class*="leading"] button'
        ],
        mainMenu: [
            '[role="menu"][data-state="open"]',
            '[data-radix-menu-content]',
            'div[data-side="bottom"][role="menu"]',
            'div.popover[role="menu"]',
            '[role="menu"]'
        ],
        subMenu: [
            '[role="menu"][data-side="right"]',
            'div[data-side="right"][role="menu"]',
            '[data-align="start"][role="menu"]:last-of-type'
        ],
        // ÂÖ•Âäõ„ÉªÈÄÅ‰ø°Èñ¢ÈÄ£
        textInput: [
            '.ProseMirror',
            '#prompt-textarea',
            '[contenteditable="true"][translate="no"]',
            'div[data-virtualkeyboard="true"]',
            'div.ProseMirror.text-token-text-primary',
            '.ql-editor'
        ],
        sendButton: [
            '[data-testid="send-button"]',
            '#composer-submit-button',
            'button[aria-label="„Éó„É≠„É≥„Éó„Éà„ÇíÈÄÅ‰ø°„Åô„Çã"]',
            'button.composer-submit-btn.composer-submit-button-color',
            'button:has(svg[width="20"][height="20"])'
        ],
        stopButton: [
            '[data-testid="stop-button"]',
            '#composer-submit-button[aria-label="„Çπ„Éà„É™„Éº„Éü„É≥„Ç∞„ÅÆÂÅúÊ≠¢"]',
            'button.composer-submit-btn.composer-secondary-button-color',
            'button:has(svg path[d*="M4.5 5.75"])'
        ],
        // ÁµêÊûúÂèñÂæóÈñ¢ÈÄ£
        canvasText: [
            'div.markdown.prose',
            'div.w-full.pt-1.pb-1',
            'div.markdown-new-styling'
        ],
        normalText: [
            '[data-message-author-role="assistant"]',
            'div.text-message',
            'div.min-h-8.text-message'
        ]
    };
    
    // ========================================
    // „É¶„Éº„ÉÜ„Ç£„É™„ÉÜ„Ç£Èñ¢Êï∞Ôºà„ÉÜ„Çπ„Éà„Ç≥„Éº„Éâ„Çà„ÇäÔºâ
    // ========================================
    
    // ÂæÖÊ©üÈñ¢Êï∞
    const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));
    
    // „É≠„Ç∞Âá∫Âäõ
    function log(message, type = 'info') {
        const timestamp = new Date().toLocaleTimeString('ja-JP', { hour12: false, hour: '2-digit', minute: '2-digit', second: '2-digit' });
        const prefix = `[${timestamp}]`;
        
        switch(type) {
            case 'error':
                console.error(`${prefix} ‚ùå ${message}`);
                break;
            case 'success':
                console.log(`${prefix} ‚úÖ ${message}`);
                break;
            case 'warning':
                console.warn(`${prefix} ‚ö†Ô∏è ${message}`);
                break;
            case 'step':
                console.log(`${prefix} üìç ${message}`);
                break;
            default:
                console.log(`${prefix} ‚ÑπÔ∏è ${message}`);
        }
    }
    
    // Ë£ÖÈ£æË¶ÅÁ¥†„ÇíÈô§Â§ñ„Åó„Åü„ÉÜ„Ç≠„Çπ„ÉàÂèñÂæó
    function getCleanText(element) {
        if (!element) return '';
        const clone = element.cloneNode(true);
        // Ë£ÖÈ£æË¶ÅÁ¥†„ÇíÂâäÈô§
        const decorativeElements = clone.querySelectorAll('mat-icon, mat-ripple, svg, .icon, .ripple');
        decorativeElements.forEach(el => el.remove());
        return clone.textContent?.trim() || '';
    }
    
    // React „Ç§„Éô„É≥„Éà„Éà„É™„Ç¨„Éº
    function triggerReactEvent(element, eventType, eventData = {}) {
        try {
            if (eventType === 'click') {
                element.click();
                return true;
            } else if (eventType === 'pointer') {
                const pointerDown = new PointerEvent('pointerdown', {
                    bubbles: true,
                    cancelable: true,
                    view: window,
                    ...eventData
                });
                const pointerUp = new PointerEvent('pointerup', {
                    bubbles: true,
                    cancelable: true,
                    view: window,
                    ...eventData
                });
                element.dispatchEvent(pointerDown);
                element.dispatchEvent(pointerUp);
                return true;
            }
            return false;
        } catch (error) {
            log(`React „Ç§„Éô„É≥„Éà„Éà„É™„Ç¨„ÉºÂ§±Êïó: ${error.message}`, 'error');
            return false;
        }
    }
    
    // Ë¶ÅÁ¥†„ÅåÂèØË¶ñ„Åã„Å§„ÇØ„É™„ÉÉ„ÇØÂèØËÉΩ„Åã„ÉÅ„Çß„ÉÉ„ÇØ
    function isElementInteractable(element) {
        if (!element) return false;
        const rect = element.getBoundingClientRect();
        const style = window.getComputedStyle(element);
        return rect.width > 0 && 
               rect.height > 0 && 
               style.display !== 'none' && 
               style.visibility !== 'hidden' && 
               style.opacity !== '0';
    }
    
    // Ë§áÊï∞„Çª„É¨„ÇØ„Çø„ÅßË¶ÅÁ¥†Ê§úÁ¥¢
    async function findElement(selectors, description, maxRetries = 3) {
        for (let retry = 0; retry < maxRetries; retry++) {
            for (const selector of selectors) {
                try {
                    let element;
                    
                    if (selector.includes(':contains(')) {
                        const match = selector.match(/\:contains\("([^"]+)"\)/);
                        if (match) {
                            const text = match[1];
                            const baseSelector = selector.split(':contains(')[0];
                            const elements = document.querySelectorAll(baseSelector || '*');
                            element = Array.from(elements).find(el => 
                                el.textContent && el.textContent.includes(text)
                            );
                        }
                    } else {
                        element = document.querySelector(selector);
                    }
                    
                    if (element && isElementInteractable(element)) {
                        return element;
                    }
                } catch (e) {
                    // „Çª„É¨„ÇØ„Çø„Ç®„É©„Éº„ÇíÁÑ°Ë¶ñ
                }
            }
            
            if (retry < maxRetries - 1) {
                await sleep(500);
            }
        }
        
        return null;
    }
    
    // „ÉÜ„Ç≠„Çπ„Éà„ÅßË¶ÅÁ¥†„ÇíÊ§úÁ¥¢
    function findElementByText(selector, text, parent = document) {
        const elements = parent.querySelectorAll(selector);
        for (const el of elements) {
            if (el.textContent && el.textContent.includes(text)) {
                return el;
            }
        }
        return null;
    }
    
    // ========================================
    // Deep Research/„Ç®„Éº„Ç∏„Çß„É≥„Éà„É¢„Éº„ÉâÂ∞ÇÁî®Âá¶ÁêÜÔºà„ÉÜ„Çπ„Éà„Ç≥„Éº„Éâ„Çà„ÇäÔºâ
    // ========================================
    async function handleSpecialModeWaiting() {
        try {
            log('„ÄêDeep Research/„Ç®„Éº„Ç∏„Çß„É≥„Éà„É¢„Éº„ÉâÁâπÂà•Âá¶ÁêÜ„ÄëÈñãÂßã', 'step');
            log('ÊúÄÂ§ßÂõûÁ≠îÂæÖÊ©üÊôÇÈñì: 40ÂàÜ', 'info');
            
            // 1-1: ÈÄÅ‰ø°ÂÅúÊ≠¢„Éú„Çø„É≥„ÅåÂá∫„Å¶„Åè„Çã„Åæ„ÅßÂæÖÊ©ü
            log('1-1. ÈÄÅ‰ø°Âæå„ÄÅÂõûÁ≠îÂÅúÊ≠¢„Éú„Çø„É≥„ÅåÂá∫„Å¶„Åè„Çã„Åæ„ÅßÂæÖÊ©ü', 'step');
            let stopBtn = null;
            for (let i = 0; i < 60; i++) {
                stopBtn = await findElement(SELECTORS.stopButton, 'ÂÅúÊ≠¢„Éú„Çø„É≥', 1);
                if (stopBtn) {
                    log(`ÂÅúÊ≠¢„Éú„Çø„É≥„ÅåË°®Á§∫„Åï„Çå„Åæ„Åó„Åü (${i+1}ÁßíÂæå)`, 'success');
                    break;
                }
                if (i % 10 === 0 && i > 0) {
                    log(`ÂÅúÊ≠¢„Éú„Çø„É≥ÂæÖÊ©ü‰∏≠... ${i}ÁßíÁµåÈÅé`, 'info');
                }
                await sleep(1000);
            }
            
            if (!stopBtn) {
                log('ÂÅúÊ≠¢„Éú„Çø„É≥„ÅåË°®Á§∫„Åï„Çå„Åæ„Åõ„Çì„Åß„Åó„Åü', 'warning');
                return false;
            }
            
            // 1-2: 2ÂàÜÈñìÂæÖÊ©ü„Åó„Å¶ÂÅúÊ≠¢„Éú„Çø„É≥„ÅÆÁä∂ÊÖã„ÇíÁ¢∫Ë™ç
            log('1-2. ÂõûÁ≠îÈÄÅ‰ø°Âæå„ÄÅ2ÂàÜÈñìÂæÖÊ©ü„ÄÇ2ÂàÜ‰ª•ÂÜÖ„Å´ÂõûÁ≠îÂÅúÊ≠¢„ÅåÊ∂àÊªÖ„Åó„Åü„Çâ1-3„Å∏„ÄÅ2ÂàÜÂæÖÊ©üÂæå„ÅØ1-4„Å∏', 'step');
            const twoMinutes = 120; // 2ÂàÜ = 120Áßí
            let disappeared = false;
            
            for (let i = 0; i < twoMinutes; i++) {
                stopBtn = await findElement(SELECTORS.stopButton, 'ÂÅúÊ≠¢„Éú„Çø„É≥', 1);
                
                if (!stopBtn) {
                    disappeared = true;
                    const minutes = Math.floor(i / 60);
                    const seconds = i % 60;
                    log(`ÂÅúÊ≠¢„Éú„Çø„É≥„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„Åü (${minutes}ÂàÜ${seconds}Áßí„ÅßÂÆå‰∫Ü)`, 'info');
                    break;
                }
                
                if (i % 30 === 0 && i > 0) {
                    const minutes = Math.floor(i / 60);
                    const seconds = i % 60;
                    log(`ÂÅúÊ≠¢„Éú„Çø„É≥Â≠òÂú®Á¢∫Ë™ç‰∏≠... (${minutes}ÂàÜ${seconds}ÁßíÁµåÈÅé / 2ÂàÜ„Åæ„Åß)`, 'info');
                }
                
                await sleep(1000);
            }
            
            // 1-3: 2ÂàÜ‰ª•ÂÜÖ„Å´ÂÅúÊ≠¢„Éú„Çø„É≥„ÅåÊ∂àÊªÖ„Åó„ÅüÂ†¥Âêà
            if (disappeared) {
                log('1-3. ÂõûÁ≠îÂÅúÊ≠¢„Åå2ÂàÜ‰ª•ÂÜÖ„Å´Ê∂àÊªÖ„Åó„Åü„Åü„ÇÅ„ÄÅ„Äå„ÅÑ„ÅÑ„Åã„ÇâÂÖÉ„ÅÆ„Éó„É≠„É≥„Éó„Éà„ÇíÁ¢∫Ë™ç„Åó„Å¶‰ΩúÊ•≠„Çí„Åó„Å¶„Äç„Å®ÂÜçÈÄÅ‰ø°', 'step');
                
                await sleep(2000); // Â∞ë„ÅóÂæÖÊ©ü
                
                // „ÉÜ„Ç≠„Çπ„ÉàÂÖ•ÂäõÊ¨Ñ„ÇíÂèñÂæó
                const input = await findElement(SELECTORS.textInput, '„ÉÜ„Ç≠„Çπ„ÉàÂÖ•ÂäõÊ¨Ñ');
                if (!input) {
                    log('ÂÖ•ÂäõÊ¨Ñ„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì', 'error');
                    return false;
                }
                
                const retryMessage = '„ÅÑ„ÅÑ„Åã„ÇâÂÖÉ„ÅÆ„Éó„É≠„É≥„Éó„Éà„ÇíÁ¢∫Ë™ç„Åó„Å¶‰ΩúÊ•≠„Çí„Åó„Å¶';
                
                // ÂÖÉ„ÅÆ„Ç≥„Éº„Éâ„ÅÆÂÖ•ÂäõÂá¶ÁêÜ„Çí‰ΩøÁî®
                if (input.classList.contains('ProseMirror') || input.classList.contains('ql-editor')) {
                    input.innerHTML = '';
                    const p = document.createElement('p');
                    p.textContent = retryMessage;
                    input.appendChild(p);
                    input.classList.remove('ql-blank');
                    input.dispatchEvent(new Event('input', { bubbles: true }));
                    input.dispatchEvent(new Event('change', { bubbles: true }));
                } else {
                    input.textContent = retryMessage;
                    input.dispatchEvent(new Event('input', { bubbles: true }));
                }
                
                log(`ÂÜçÈÄÅ‰ø°„É°„ÉÉ„Çª„Éº„Ç∏ÂÖ•ÂäõÂÆå‰∫Ü: "${retryMessage}"`, 'success');
                await sleep(1000);
                
                // ÈÄÅ‰ø°„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ
                const sendBtn = await findElement(SELECTORS.sendButton, 'ÈÄÅ‰ø°„Éú„Çø„É≥');
                if (sendBtn) {
                    sendBtn.click();
                    log('ÂÜçÈÄÅ‰ø°„Åó„Åæ„Åó„Åü', 'success');
                    await sleep(3000);
                    
                    // ÂÜçÈÄÅ‰ø°Âæå„ÄÅÂÅúÊ≠¢„Éú„Çø„É≥„ÅåÂÜçÂá∫Áèæ„Åô„Çã„ÅÆ„ÇíÂæÖ„Å§
                    for (let i = 0; i < 30; i++) {
                        stopBtn = await findElement(SELECTORS.stopButton, 'ÂÅúÊ≠¢„Éú„Çø„É≥', 1);
                        if (stopBtn) {
                            log('ÂÜçÈÄÅ‰ø°Âæå„ÄÅÂÅúÊ≠¢„Éú„Çø„É≥„ÅåÂÜçË°®Á§∫„Åï„Çå„Åæ„Åó„Åü', 'success');
                            break;
                        }
                        await sleep(1000);
                    }
                } else {
                    log('ÈÄÅ‰ø°„Éú„Çø„É≥„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì', 'error');
                }
            } else {
                log('2ÂàÜÈñìÁµåÈÅé„ÄÇÂÅúÊ≠¢„Éú„Çø„É≥„ÅØÊ∂àÊªÖ„Åó„Åæ„Åõ„Çì„Åß„Åó„Åü', 'info');
            }
            
            // 1-4: ÂõûÁ≠îÂÅúÊ≠¢„Éú„Çø„É≥„Åå10ÁßíÈñìÈÄ£Á∂ö„ÅßÊ∂àÊªÖ„Åô„Çã„Åæ„ÅßÂæÖÊ©üÔºàÊúÄÂ§ß40ÂàÜÔºâ
            log('1-4. ÂõûÁ≠îÂÅúÊ≠¢„Éú„Çø„É≥„Åå10ÁßíÈñìÈÄ£Á∂ö„ÅßÊ∂àÊªÖ„Åô„Çã„Åæ„ÅßÂæÖÊ©üÔºàÊúÄÂ§ß40ÂàÜÔºâ', 'step');
            
            const maxWaitTime = 40 * 60; // 40ÂàÜ = 2400Áßí
            let consecutiveAbsent = 0;
            
            for (let i = 0; i < maxWaitTime; i++) {
                stopBtn = await findElement(SELECTORS.stopButton, 'ÂÅúÊ≠¢„Éú„Çø„É≥', 1);
                
                if (!stopBtn) {
                    consecutiveAbsent++;
                    if (consecutiveAbsent <= 10) {
                        log(`ÂÅúÊ≠¢„Éú„Çø„É≥‰∏çÂú®: ${consecutiveAbsent}ÁßíÈÄ£Á∂ö`, 'info');
                    }
                    
                    if (consecutiveAbsent >= 10) {
                        log('ÂÅúÊ≠¢„Éú„Çø„É≥„Åå10ÁßíÈñìÈÄ£Á∂ö„ÅßÊ∂àÊªÖ„Åó„Åæ„Åó„Åü„ÄÇÂøúÁ≠îÂÆå‰∫ÜÔºÅ', 'success');
                        break;
                    }
                } else {
                    if (consecutiveAbsent > 0) {
                        log('ÂÅúÊ≠¢„Éú„Çø„É≥„ÅåÂÜçË°®Á§∫„Åï„Çå„Åæ„Åó„Åü„ÄÇ„Ç´„Ç¶„É≥„Éà„É™„Çª„ÉÉ„Éà', 'info');
                    }
                    consecutiveAbsent = 0;
                }
                
                // 30Áßí„Åî„Å®„Å´ÈÄ≤ÊçóË°®Á§∫
                if (i % 30 === 0 && i > 0) {
                    const minutes = Math.floor(i / 60);
                    const seconds = i % 60;
                    log(`ÂæÖÊ©ü‰∏≠... (${minutes}ÂàÜ${seconds}ÁßíÁµåÈÅé / ÊúÄÂ§ß40ÂàÜ)`, 'info');
                }
                
                await sleep(1000);
            }
            
            if (consecutiveAbsent < 10) {
                log('ÊúÄÂ§ßÂæÖÊ©üÊôÇÈñìÔºà40ÂàÜÔºâ„Å´ÈÅî„Åó„Åæ„Åó„Åü', 'warning');
            }
            
            await sleep(2000);
            log('Deep Research/„Ç®„Éº„Ç∏„Çß„É≥„Éà„É¢„Éº„ÉâÁâπÂà•Âá¶ÁêÜÂÆå‰∫Ü', 'success');
            return true;
            
        } catch (error) {
            log(`ÁâπÂà•Âá¶ÁêÜ„Åß„Ç®„É©„Éº: ${error.message}`, 'error');
            console.error(error);
            return false;
        }
    }
    
    // ========================================
    // „É°„Ç§„É≥ÂÆüË°åÈñ¢Êï∞
    // ========================================
    async function executeTask(taskData) {
        console.log('%cüöÄ ChatGPT V2 „Çø„Çπ„ÇØÂÆüË°åÈñãÂßã', 'color: #00BCD4; font-weight: bold; font-size: 16px');
        console.log('Âèó‰ø°„Åó„Åü„Çø„Çπ„ÇØ„Éá„Éº„Çø:', {
            model: taskData.model,
            function: taskData.function,
            promptLength: taskData.prompt?.length || taskData.text?.length || 0,
            hasPrompt: !!(taskData.prompt || taskData.text)
        });
        
        try {
            // „Éë„É©„É°„Éº„ÇøÊ∫ñÂÇôÔºà„Çπ„Éó„É¨„ÉÉ„Éâ„Ç∑„Éº„Éà„ÅÆÂÄ§„Çí„Åù„ÅÆ„Åæ„Åæ‰ΩøÁî®Ôºâ
            const prompt = taskData.prompt || taskData.text || '';
            const modelName = taskData.model || '';
            const featureName = taskData.function || null;
            
            log(`ÈÅ∏Êäû„Åï„Çå„Åü„É¢„Éá„É´: ${modelName}`, 'info');
            log(`ÈÅ∏Êäû„Åï„Çå„ÅüÊ©üËÉΩ: ${featureName || 'Ë®≠ÂÆö„Å™„Åó'}`, 'info');
            log(`„Éó„É≠„É≥„Éó„Éà: ${prompt.substring(0, 100)}...`, 'info');
            
            // „É¢„Éá„É´ÊÉÖÂ†±„Çí‰∫ãÂâçÂèñÂæóÔºà„ÉÜ„Çπ„ÉàÊ∏à„Åø„Ç≥„Éº„Éâ„ÅÆ„É≠„Ç∏„ÉÉ„ÇØÔºâ
            let selectedModel = null;
            if (modelName) {
                // Âà©Áî®ÂèØËÉΩ„Å™„É¢„Éá„É´„ÇíÊ§úÁ¥¢„Åó„Å¶selectedModel„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà„Çí‰ΩúÊàê
                const modelButton = await findElement(SELECTORS.modelButton, '„É¢„Éá„É´Âàá„ÇäÊõø„Åà„Éú„Çø„É≥');
                if (modelButton) {
                    modelButton.dispatchEvent(new PointerEvent('pointerdown', { bubbles: true }));
                    await sleep(100);
                    modelButton.dispatchEvent(new PointerEvent('pointerup', { bubbles: true }));
                    await sleep(1500);
                    
                    const modelMenu = await findElement(SELECTORS.modelMenu, '„É¢„Éá„É´„É°„Éã„É•„Éº');
                    if (modelMenu) {
                        // „É°„Ç§„É≥„É°„Éã„É•„Éº„ÅÆ„É¢„Éá„É´ÂèñÂæó
                        const mainMenuItems = modelMenu.querySelectorAll('[role="menuitem"][data-testid^="model-switcher-"]');
                        for (const item of mainMenuItems) {
                            const itemModelName = getCleanText(item);
                            if (itemModelName === modelName || itemModelName.includes(modelName)) {
                                selectedModel = {
                                    name: itemModelName,
                                    testId: item.getAttribute('data-testid'),
                                    type: 'Current'
                                };
                                break;
                            }
                        }
                        
                        // „É¨„Ç¨„Ç∑„Éº„É¢„Éá„É´„ÇÇ„ÉÅ„Çß„ÉÉ„ÇØ
                        if (!selectedModel) {
                            const legacyButton = modelMenu.querySelector('[role="menuitem"][data-has-submenu]') ||
                                                Array.from(modelMenu.querySelectorAll('[role="menuitem"]'))
                                                    .find(el => el.textContent && el.textContent.includes('„É¨„Ç¨„Ç∑„Éº„É¢„Éá„É´'));
                            
                            if (legacyButton) {
                                legacyButton.click();
                                await sleep(1500);
                                
                                const allMenus = document.querySelectorAll('[role="menu"]');
                                for (const menu of allMenus) {
                                    if (menu !== modelMenu) {
                                        const items = menu.querySelectorAll('[role="menuitem"]');
                                        for (const item of items) {
                                            const itemModelName = getCleanText(item);
                                            if (itemModelName === modelName || itemModelName.includes(modelName)) {
                                                selectedModel = {
                                                    name: itemModelName,
                                                    type: 'Legacy'
                                                };
                                                break;
                                            }
                                        }
                                        if (selectedModel) break;
                                    }
                                }
                            }
                        }
                        
                        // „É°„Éã„É•„Éº„ÇíÈñâ„Åò„Çã
                        document.dispatchEvent(new KeyboardEvent('keydown', { key: 'Escape', code: 'Escape' }));
                        await sleep(1000);
                    }
                }
            }
            
            // ========================================
            // „Çπ„ÉÜ„ÉÉ„Éó4: „ÉÜ„Ç≠„Çπ„ÉàÂÖ•Âäõ
            // ========================================
            log('\n„Äê„Çπ„ÉÜ„ÉÉ„Éó4„Äë„ÉÜ„Ç≠„Çπ„ÉàÂÖ•Âäõ', 'step');
            
            const input = await findElement(SELECTORS.textInput, '„ÉÜ„Ç≠„Çπ„ÉàÂÖ•ÂäõÊ¨Ñ');
            if (!input) {
                throw new Error('ÂÖ•ÂäõÊ¨Ñ„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
            }
            
            // ChatGPTÂãï‰Ωú„Ç≥„Éº„Éâ„ÅÆ„ÉÜ„Ç≠„Çπ„ÉàÂÖ•ÂäõÂá¶ÁêÜ„Çí„Åù„ÅÆ„Åæ„Åæ‰ΩøÁî®
            if (input.classList.contains('ProseMirror') || input.classList.contains('ql-editor')) {
                input.innerHTML = '';
                const p = document.createElement('p');
                p.textContent = prompt;
                input.appendChild(p);
                input.classList.remove('ql-blank');
                input.dispatchEvent(new Event('input', { bubbles: true }));
                input.dispatchEvent(new Event('change', { bubbles: true }));
            } else {
                input.textContent = prompt;
                input.dispatchEvent(new Event('input', { bubbles: true }));
            }
            
            log('„ÉÜ„Ç≠„Çπ„ÉàÂÖ•ÂäõÂÆå‰∫Ü', 'success');
            await sleep(1000);
            
            // ========================================
            // „Çπ„ÉÜ„ÉÉ„Éó5: „É¢„Éá„É´ÈÅ∏ÊäûÔºà„ÉÜ„Çπ„ÉàÊ∏à„Åø„Ç≥„Éº„ÉâÔºâ
            // ========================================
            if (modelName) {
                log('\n„Äê„Çπ„ÉÜ„ÉÉ„Éó5„Äë„É¢„Éá„É´ÈÅ∏Êäû', 'step');
                
                // selectedModel„Åå‰∫ãÂâçÊ§úÁ¥¢„ÅßË¶ã„Å§„Åã„Çâ„Å™„Åã„Å£„ÅüÂ†¥Âêà„ÅÆÊÉÖÂ†±„ÇíÂá∫Âäõ
                if (!selectedModel) {
                    log(`‰∫ãÂâçÊ§úÁ¥¢„Åß„É¢„Éá„É´ "${modelName}" „ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇÂÜçÊ§úÁ¥¢„ÇíË©¶„Åø„Åæ„Åô„ÄÇ`, 'warning');
                }
                
                // 5-1: „É¢„Éá„É´„É°„Éã„É•„Éº„ÇíÈñã„Åè
                log('5-1. „É¢„Éá„É´„ÅÆ„É°„Éã„É•„Éº„ÇíÈñã„Åè', 'step');
                const modelBtn = await findElement(SELECTORS.modelButton, '„É¢„Éá„É´„Éú„Çø„É≥');
                if (!modelBtn) {
                    throw new Error('„É¢„Éá„É´„Éú„Çø„É≥„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
                }
                
                modelBtn.dispatchEvent(new PointerEvent('pointerdown', { bubbles: true }));
                await sleep(100);
                modelBtn.dispatchEvent(new PointerEvent('pointerup', { bubbles: true }));
                await sleep(1500);
                
                const modelMenuEl = await findElement(SELECTORS.modelMenu, '„É¢„Éá„É´„É°„Éã„É•„Éº');
                if (!modelMenuEl) {
                    throw new Error('„É¢„Éá„É´„É°„Éã„É•„Éº„ÅåÈñã„Åç„Åæ„Åõ„Çì');
                }
                
                // „É¨„Ç¨„Ç∑„Éº„É¢„Éá„É´„ÅÆÂ†¥ÂêàÔºà„ÉÜ„Çπ„ÉàÊ∏à„Åø„Ç≥„Éº„Éâ„ÅÆ„É≠„Ç∏„ÉÉ„ÇØÔºâ
                if (selectedModel.type === 'Legacy') {
                    const legacyBtn = modelMenuEl.querySelector('[role="menuitem"][data-has-submenu]') ||
                                    Array.from(modelMenuEl.querySelectorAll('[role="menuitem"]'))
                                        .find(el => el.textContent && el.textContent.includes('„É¨„Ç¨„Ç∑„Éº„É¢„Éá„É´'));
                    if (legacyBtn) {
                        log('„É¨„Ç¨„Ç∑„Éº„É¢„Éá„É´„É°„Éã„É•„Éº„ÇíÈñã„Åè', 'info');
                        legacyBtn.click();
                        await sleep(1500);
                    }
                }
                
                // 5-2: Ë©≤ÂΩì„ÅÆ„É¢„Éá„É´„ÇíÈÅ∏ÊäûÔºà„ÉÜ„Çπ„ÉàÊ∏à„Åø„Ç≥„Éº„Éâ„ÅÆ„É≠„Ç∏„ÉÉ„ÇØÔºâ
                log('5-2. Ë©≤ÂΩì„ÅÆ„É¢„Éá„É´„ÇíÈÅ∏Êäû„Åô„Çã', 'step');
                const allMenuItems = document.querySelectorAll('[role="menuitem"]');
                
                // selectedModel„Åå„Å™„ÅÑÂ†¥Âêà„ÅØ„ÄÅmodelName„ÅßÁõ¥Êé•Ê§úÁ¥¢
                let targetItem = null;
                if (selectedModel) {
                    targetItem = Array.from(allMenuItems).find(item => {
                        const text = getCleanText(item);
                        return text === selectedModel.name || 
                               (selectedModel.testId && item.getAttribute('data-testid') === selectedModel.testId);
                    });
                } else {
                    // selectedModel„Åå„Å™„ÅÑÂ†¥Âêà„ÄÅmodelName„ÅßÁõ¥Êé•Ê§úÁ¥¢
                    targetItem = Array.from(allMenuItems).find(item => {
                        const text = getCleanText(item);
                        return text === modelName || text.includes(modelName);
                    });
                }
                
                if (targetItem) {
                    targetItem.click();
                    await sleep(2000);
                    const selectedName = selectedModel ? selectedModel.name : modelName;
                    log(`„É¢„Éá„É´ÈÅ∏ÊäûÂÆå‰∫Ü: ${selectedName}`, 'success');
                } else {
                    log(`„É¢„Éá„É´ "${modelName}" „ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„ÄÇ„Éá„Éï„Ç©„É´„Éà„É¢„Éá„É´„Çí‰ΩøÁî®„Åó„Åæ„Åô„ÄÇ`, 'warning');
                }
            } else {
                log('„É¢„Éá„É´ÈÅ∏Êäû„Çí„Çπ„Ç≠„ÉÉ„ÉóÔºà„É¢„Éá„É´Âêç„ÅåÊåáÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„ÇìÔºâ', 'info');
            }
            
            // ========================================
            // „Çπ„ÉÜ„ÉÉ„Éó6: Ê©üËÉΩÈÅ∏ÊäûÔºàÊ©üËÉΩÂêç„Éû„ÉÉ„Éî„É≥„Ç∞ÂØæÂøúÔºâ
            // ========================================
            let mappedFeatureName = null;
            if (featureName && featureName !== '' && featureName !== 'none' && featureName !== 'ÈÄöÂ∏∏') {
                // Ê©üËÉΩÂêç„Éû„ÉÉ„Éî„É≥„Ç∞Ôºà„Çπ„Éó„É¨„ÉÉ„Éâ„Ç∑„Éº„ÉàÂÄ§ ‚Üí ChatGPT UIË°®Ë®òÔºâ
                // ÂøÖË¶ÅÊúÄÂ∞èÈôê„ÅÆ„Éû„ÉÉ„Éî„É≥„Ç∞„ÅÆ„ÅøÔºà„Çπ„Éö„É´„Éü„Çπ„ÅÆ‰øÆÊ≠£„Å™„Å©Ôºâ
                const featureMapping = {
                    'DeepReserch': 'Deep Research'  // „Çπ„Éö„É´„Éü„Çπ„ÅÆ‰øÆÊ≠£„ÅÆ„Åø
                };
                
                mappedFeatureName = featureMapping[featureName] || featureName;
                
                console.log(`üîÑ [Ê©üËÉΩÂêç„Éû„ÉÉ„Éî„É≥„Ç∞] "${featureName}" ‚Üí "${mappedFeatureName}"`);
                
                log('\n„Äê„Çπ„ÉÜ„ÉÉ„Éó6„ÄëÊ©üËÉΩÈÅ∏Êäû', 'step');
                
                // 6-1: Ê©üËÉΩ„É°„Éã„É•„Éº„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ
                log('6-1. Ê©üËÉΩ„É°„Éã„É•„Éº„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ', 'step');
                const funcMenuBtn = await findElement(SELECTORS.menuButton, '„É°„Éã„É•„Éº„Éú„Çø„É≥');
                if (!funcMenuBtn) {
                    throw new Error('Ê©üËÉΩ„É°„Éã„É•„Éº„Éú„Çø„É≥„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
                }
                
                funcMenuBtn.dispatchEvent(new PointerEvent('pointerdown', { bubbles: true }));
                await sleep(100);
                funcMenuBtn.dispatchEvent(new PointerEvent('pointerup', { bubbles: true }));
                await sleep(1500);
                
                const funcMenu = await findElement(SELECTORS.mainMenu, '„É°„Ç§„É≥„É°„Éã„É•„Éº');
                if (!funcMenu) {
                    throw new Error('Ê©üËÉΩ„É°„Éã„É•„Éº„ÅåÈñã„Åç„Åæ„Åõ„Çì');
                }
                
                // „É°„Ç§„É≥„É°„Éã„É•„Éº„ÅßÊ©üËÉΩ„ÇíÊé¢„ÅôÔºà„Éû„ÉÉ„Éî„É≥„Ç∞„Åó„ÅüÊ©üËÉΩÂêç„Çí‰ΩøÁî®Ôºâ
                let featureElement = findElementByText('[role="menuitemradio"]', mappedFeatureName);
                
                console.log(`üîç [Ê©üËÉΩÊ§úÁ¥¢] „É°„Ç§„É≥„É°„Éã„É•„Éº„Åß "${mappedFeatureName}" „ÇíÊ§úÁ¥¢: ${featureElement ? 'Ë¶ã„Å§„Åã„Å£„Åü' : 'Ë¶ã„Å§„Åã„Çâ„Å™„ÅÑ'}`);
                
                if (!featureElement) {
                    // 6-2: „Åï„Çâ„Å´Ë°®Á§∫„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ
                    log('6-2. Ê©üËÉΩ„É°„Éã„É•„Éº„ÅÆ‰∏≠„ÅÆ„Åï„Çâ„Å´Ë°®Á§∫„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ', 'step');
                    const moreBtn = findElementByText('[role="menuitem"]', '„Åï„Çâ„Å´Ë°®Á§∫');
                    if (moreBtn) {
                        moreBtn.click();
                        
                        // „Çµ„Éñ„É°„Éã„É•„Éº„ÅåË°®Á§∫„Åï„Çå„Çã„Åæ„ÅßÂæÖÊ©üÔºàÊúÄÂ§ß3ÁßíÔºâ
                        let subMenu = null;
                        for (let i = 0; i < 6; i++) {
                            await sleep(500);
                            subMenu = document.querySelector('[data-side="right"]');
                            if (subMenu) {
                                console.log(`‚úÖ [Ê©üËÉΩÊ§úÁ¥¢] „Çµ„Éñ„É°„Éã„É•„Éº„ÅåË°®Á§∫„Åï„Çå„Åæ„Åó„Åü (${(i + 1) * 0.5}ÁßíÂæå)`);
                                break;
                            }
                        }
                        
                        // 6-3: „Çµ„Éñ„É°„Éã„É•„Éº„ÅßÊ©üËÉΩ„ÇíÊé¢„Åô
                        log('6-3. „Çµ„Éñ„É°„Éã„É•„Éº„ÅßÊ©üËÉΩ„ÇíÈÅ∏Êäû', 'step');
                        if (subMenu) {
                            // ËøΩÂä†„ÅßÂ∞ë„ÅóÂæÖÊ©ü„Åó„Å¶„É°„Éã„É•„ÉºÈ†ÖÁõÆ„ÅåÂÆåÂÖ®„Å´„É¨„É≥„ÉÄ„É™„É≥„Ç∞„Åï„Çå„Çã„ÅÆ„ÇíÂæÖ„Å§
                            await sleep(500);
                            // „Çª„É¨„ÇØ„Çø„ÅÆ„Éê„É™„Ç®„Éº„Ç∑„Éß„É≥„ÇíË©¶„Åô
                            featureElement = findElementByText('[role="menuitemradio"]', mappedFeatureName, subMenu);
                            console.log(`üîç [Ê©üËÉΩÊ§úÁ¥¢] „Çµ„Éñ„É°„Éã„É•„Éº„Åß "${mappedFeatureName}" „ÇíÊ§úÁ¥¢: ${featureElement ? 'Ë¶ã„Å§„Åã„Å£„Åü' : 'Ë¶ã„Å§„Åã„Çâ„Å™„ÅÑ'}`);
                        } else {
                            console.log(`‚ö†Ô∏è [Ê©üËÉΩÊ§úÁ¥¢] „Çµ„Éñ„É°„Éã„É•„Éº„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„ÇìÔºà3ÁßíÂæÖÊ©üÂæåÔºâ`);
                        }
                    } else {
                        console.log(`‚ö†Ô∏è [Ê©üËÉΩÊ§úÁ¥¢] "„Åï„Çâ„Å´Ë°®Á§∫"„Éú„Çø„É≥„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì`);
                    }
                }
                
                // „Åô„Åπ„Å¶„ÅÆÊ§úÁ¥¢„ÅåÁµÇ„Çè„Å£„Å¶„Åã„ÇâÂà§ÂÆö
                if (featureElement) {
                    featureElement.click();
                    await sleep(1500);
                    log(`Ê©üËÉΩÈÅ∏ÊäûÂÆå‰∫Ü: ${mappedFeatureName}`, 'success');
                    
                    // 6-4: Ê©üËÉΩ„ÅåÈÅ∏Êäû„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç
                    log('6-4. Ê©üËÉΩ„ÅåÈÅ∏Êäû„Åï„Çå„Å¶„ÅÑ„Çã„Åã„ÇíÁ¢∫Ë™ç', 'step');
                    const buttons = document.querySelectorAll('button[data-pill="true"]');
                    let found = false;
                    for (const button of buttons) {
                        const text = getCleanText(button);
                        if (text) {
                            log(`ÈÅ∏Êäû„Åï„Çå„ÅüÊ©üËÉΩ„Éú„Çø„É≥: ${text}`, 'success');
                            found = true;
                        }
                    }
                    if (!found) {
                        log('Ê©üËÉΩ„Éú„Çø„É≥„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì', 'warning');
                    }
                } else {
                    // „Éá„Éê„ÉÉ„Ç∞: Âà©Áî®ÂèØËÉΩ„Å™Ê©üËÉΩ„ÇíÂèéÈõÜ
                    const allFeatures = [];
                    
                    // „É°„Ç§„É≥„É°„Éã„É•„Éº„ÅÆÊ©üËÉΩ„ÇíÂèñÂæó
                    const mainMenuItems = document.querySelectorAll('[role="menuitemradio"]');
                    mainMenuItems.forEach(item => {
                        const text = getCleanText(item);
                        if (text) {
                            // „Çµ„Éñ„É°„Éã„É•„ÉºÂÜÖ„Åã„É°„Ç§„É≥„É°„Éã„É•„ÉºÂÜÖ„Åã„ÇíÂà§ÂÆö
                            const isInSubMenu = item.closest('[data-side="right"]');
                            if (isInSubMenu) {
                                allFeatures.push(`[„Çµ„Éñ] ${text}`);
                            } else {
                                allFeatures.push(`[„É°„Ç§„É≥] ${text}`);
                            }
                        }
                    });
                    
                    console.log(`‚ùå [Ê©üËÉΩÊ§úÁ¥¢] "${mappedFeatureName}" „ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„ÄÇÂà©Áî®ÂèØËÉΩ„Å™Ê©üËÉΩ:`, allFeatures);
                    
                    // „Çà„ÇäË©≥Á¥∞„Å™ÊÉÖÂ†±„ÇíÂá∫Âäõ
                    if (allFeatures.length === 0) {
                        console.log(`‚ö†Ô∏è [Ê©üËÉΩÊ§úÁ¥¢] „É°„Éã„É•„ÉºÈ†ÖÁõÆ„Åå1„Å§„ÇÇË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„ÄÇ„É°„Éã„É•„Éº„ÅåÊ≠£„Åó„ÅèÈñã„ÅÑ„Å¶„ÅÑ„Å™„ÅÑÂèØËÉΩÊÄß„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ`);
                    } else {
                        console.log(`üìã [Ê©üËÉΩÊ§úÁ¥¢] Ë¶ã„Å§„Åã„Å£„ÅüÊ©üËÉΩÊï∞: ${allFeatures.length}ÂÄã`);
                    }
                    
                    log(`ÊåáÂÆö„Åï„Çå„ÅüÊ©üËÉΩ "${mappedFeatureName}" „ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì`, 'warning');
                }
                
                // 6-5: „É°„Éã„É•„Éº„ÇíÈñâ„Åò„Çã
                log('6-5. Ê©üËÉΩ„É°„Éã„É•„Éº„ÇíÈñâ„Åò„Çã', 'step');
                document.dispatchEvent(new KeyboardEvent('keydown', { key: 'Escape', code: 'Escape' }));
                await sleep(1000);
            }
            
            // ========================================
            // „Çπ„ÉÜ„ÉÉ„Éó7: „É°„ÉÉ„Çª„Éº„Ç∏ÈÄÅ‰ø°ÔºàÂÜçË©¶Ë°åÂØæÂøúÔºâ
            // ========================================
            log('\n„Äê„Çπ„ÉÜ„ÉÉ„Éó7„Äë„É°„ÉÉ„Çª„Éº„Ç∏ÈÄÅ‰ø°ÔºàÂÜçË©¶Ë°åÂØæÂøúÔºâ', 'step');
            
            // ÈÄÅ‰ø°„Éú„Çø„É≥„Çí5Âõû„Åæ„ÅßÂÜçË©¶Ë°å
            let sendSuccess = false;
            let sendAttempts = 0;
            const maxSendAttempts = 5;
            
            while (!sendSuccess && sendAttempts < maxSendAttempts) {
                sendAttempts++;
                log(`ÈÄÅ‰ø°Ë©¶Ë°å ${sendAttempts}/${maxSendAttempts}`, 'step');
                
                const sendBtn = await findElement(SELECTORS.sendButton, 'ÈÄÅ‰ø°„Éú„Çø„É≥');
                if (!sendBtn) {
                    if (sendAttempts === maxSendAttempts) {
                        throw new Error('ÈÄÅ‰ø°„Éú„Çø„É≥„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
                    }
                    log(`ÈÄÅ‰ø°„Éú„Çø„É≥„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„ÄÇ2ÁßíÂæå„Å´ÂÜçË©¶Ë°å...`, 'warning');
                    await sleep(2000);
                    continue;
                }
                
                // ÈÄÅ‰ø°„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ
                sendBtn.click();
                log(`ÈÄÅ‰ø°„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„Åæ„Åó„ÅüÔºàË©¶Ë°å${sendAttempts}Ôºâ`, 'success');
                await sleep(1000);
                
                // ÈÄÅ‰ø°Âæå„Å´ÂÅúÊ≠¢„Éú„Çø„É≥„ÅåË°®Á§∫„Åï„Çå„Çã„Åã„ÄÅ„Åæ„Åü„ÅØÈÄÅ‰ø°„Éú„Çø„É≥„ÅåÊ∂à„Åà„Çã„Åæ„Åß5ÁßíÂæÖÊ©ü
                let stopButtonAppeared = false;
                let sendButtonDisappeared = false;
                
                for (let i = 0; i < 5; i++) {
                    // ÂÅúÊ≠¢„Éú„Çø„É≥„ÅÆÁ¢∫Ë™ç
                    const stopBtn = await findElement(SELECTORS.stopButton, 'ÂÅúÊ≠¢„Éú„Çø„É≥', 1);
                    if (stopBtn) {
                        stopButtonAppeared = true;
                        log('ÂÅúÊ≠¢„Éú„Çø„É≥„ÅåË°®Á§∫„Åï„Çå„Åæ„Åó„Åü - ÈÄÅ‰ø°ÊàêÂäü', 'success');
                        break;
                    }
                    
                    // ÈÄÅ‰ø°„Éú„Çø„É≥„ÅåÊ∂à„Åà„Åü„Åã„Å©„ÅÜ„Åã„ÇíÁ¢∫Ë™ç
                    const stillSendBtn = await findElement(SELECTORS.sendButton, 'ÈÄÅ‰ø°„Éú„Çø„É≥', 1);
                    if (!stillSendBtn) {
                        sendButtonDisappeared = true;
                        log('ÈÄÅ‰ø°„Éú„Çø„É≥„ÅåÊ∂à„Åà„Åæ„Åó„Åü - ÈÄÅ‰ø°ÊàêÂäü', 'success');
                        break;
                    }
                    
                    await sleep(1000);
                }
                
                if (stopButtonAppeared || sendButtonDisappeared) {
                    sendSuccess = true;
                    break;
                } else {
                    log(`ÈÄÅ‰ø°ÂèçÂøú„ÅåÁ¢∫Ë™ç„Åß„Åç„Åæ„Åõ„Çì„ÄÇÂÜçË©¶Ë°å„Åó„Åæ„Åô...`, 'warning');
                    await sleep(2000);
                }
            }
            
            if (!sendSuccess) {
                throw new Error(`${maxSendAttempts}ÂõûË©¶Ë°å„Åó„Å¶„ÇÇÈÄÅ‰ø°„ÅåÊàêÂäü„Åó„Åæ„Åõ„Çì„Åß„Åó„Åü`);
            }
            
            // ÈÄÅ‰ø°ÊôÇÂàª„ÇíË®òÈå≤ÔºàSpreadsheetLoggerÁî®Ôºâ
            log(`üîç ÈÄÅ‰ø°ÊôÇÂàªË®òÈå≤ÈñãÂßã - AIHandler: ${!!window.AIHandler}, recordSendTimestamp: ${!!window.AIHandler?.recordSendTimestamp}, currentAITaskInfo: ${!!window.currentAITaskInfo}`, 'info');
            if (window.AIHandler && window.AIHandler.recordSendTimestamp) {
                try {
                    log(`üìù ÈÄÅ‰ø°ÊôÇÂàªË®òÈå≤ÂÆüË°åÈñãÂßã - „Çø„Çπ„ÇØID: ${window.currentAITaskInfo?.taskId}`, 'info');
                    await window.AIHandler.recordSendTimestamp('ChatGPT');
                    log(`‚úÖ ÈÄÅ‰ø°ÊôÇÂàªË®òÈå≤ÊàêÂäü`, 'success');
                } catch (error) {
                    log(`‚ùå ÈÄÅ‰ø°ÊôÇÂàªË®òÈå≤„Ç®„É©„Éº: ${error.message}`, 'error');
                }
            } else {
                log(`‚ö†Ô∏è AIHandler „Åæ„Åü„ÅØ recordSendTimestamp „ÅåÂà©Áî®„Åß„Åç„Åæ„Åõ„Çì`, 'warning');
            }
            
            await sleep(1000);
            
            // ========================================
            // „Çπ„ÉÜ„ÉÉ„Éó8: ÂøúÁ≠îÂæÖÊ©ü
            // ========================================
            log('\n„Äê„Çπ„ÉÜ„ÉÉ„Éó8„ÄëÂøúÁ≠îÂæÖÊ©ü', 'step');
            
            // Deep Research/„Ç®„Éº„Ç∏„Çß„É≥„Éà„É¢„Éº„Éâ„ÅÆÂà§ÂÆöÔºà„Éû„ÉÉ„Éî„É≥„Ç∞Âæå„ÅÆÊ©üËÉΩÂêç„Çí‰ΩøÁî®Ôºâ
            const finalFeatureName = mappedFeatureName || featureName;
            console.log(`üîç [Ê©üËÉΩÂà§ÂÆö] ChatGPTÊ©üËÉΩ„ÉÅ„Çß„ÉÉ„ÇØ:`, {
                originalFeatureName: featureName,
                mappedFeatureName: mappedFeatureName,
                finalFeatureName: finalFeatureName,
                isDeepResearch: finalFeatureName === 'Deep Research',
                containsResearch: finalFeatureName && finalFeatureName.includes('Research'),
                containsAgent: finalFeatureName && finalFeatureName.includes('„Ç®„Éº„Ç∏„Çß„É≥„Éà')
            });
            
            const isSpecialMode = finalFeatureName && (
                finalFeatureName === 'Deep Research' || 
                finalFeatureName === '„Ç®„Éº„Ç∏„Çß„É≥„Éà„É¢„Éº„ÉâÊñ∞Ë¶è' ||
                finalFeatureName === '„Ç®„Éº„Ç∏„Çß„É≥„Éà„É¢„Éº„Éâ' ||
                finalFeatureName.includes('„Ç®„Éº„Ç∏„Çß„É≥„Éà') ||
                finalFeatureName.includes('Research')
            );
            
            console.log(`üéØ [Ê©üËÉΩÂà§ÂÆö] ChatGPTÁâπÂà•„É¢„Éº„ÉâÂà§ÂÆöÁµêÊûú: ${isSpecialMode} (ÊúÄÁµÇÊ©üËÉΩÂêç: "${finalFeatureName}")`);
            
            if (isSpecialMode) {
                log(`${finalFeatureName}Ê§úÂá∫ - ÁâπÂà•„Å™ÂæÖÊ©üÂá¶ÁêÜ„ÇíÂÆüË°å`, 'warning');
                await handleSpecialModeWaiting();
            } else {
                // ÈÄöÂ∏∏„ÅÆÂæÖÊ©üÂá¶ÁêÜ
                log('ÈÄöÂ∏∏„ÅÆÂæÖÊ©üÂá¶ÁêÜ„ÇíÂÆüË°å', 'info');
                
                // ÂÅúÊ≠¢„Éú„Çø„É≥„ÅåË°®Á§∫„Åï„Çå„Çã„Åæ„ÅßÂæÖÊ©ü
                let stopBtn = null;
                for (let i = 0; i < 30; i++) {
                    stopBtn = await findElement(SELECTORS.stopButton, 'ÂÅúÊ≠¢„Éú„Çø„É≥', 1);
                    if (stopBtn) {
                        log('ÂÅúÊ≠¢„Éú„Çø„É≥„ÅåË°®Á§∫„Åï„Çå„Åæ„Åó„Åü', 'success');
                        break;
                    }
                    await sleep(1000);
                }
                
                // ÂÅúÊ≠¢„Éú„Çø„É≥„ÅåÊ∂à„Åà„Çã„Åæ„ÅßÂæÖÊ©üÔºàÊúÄÂ§ß5ÂàÜÔºâ
                if (stopBtn) {
                    log('ÈÄÅ‰ø°ÂÅúÊ≠¢„Éú„Çø„É≥„ÅåÊ∂à„Åà„Çã„Åæ„ÅßÂæÖÊ©üÔºàÊúÄÂ§ß5ÂàÜÔºâ', 'info');
                    for (let i = 0; i < 300; i++) {
                        stopBtn = await findElement(SELECTORS.stopButton, 'ÂÅúÊ≠¢„Éú„Çø„É≥', 1);
                        if (!stopBtn) {
                            log('ÂøúÁ≠îÂÆå‰∫Ü', 'success');
                            break;
                        }
                        if (i % 30 === 0 && i > 0) {
                            const minutes = Math.floor(i / 60);
                            const seconds = i % 60;
                            log(`ÂøúÁ≠îÂæÖÊ©ü‰∏≠... (${minutes}ÂàÜ${seconds}ÁßíÁµåÈÅé)`, 'info');
                        }
                        await sleep(1000);
                    }
                }
            }
            
            await sleep(2000); // ËøΩÂä†„ÅÆÂæÖÊ©ü
            
            // ========================================
            // „Çπ„ÉÜ„ÉÉ„Éó9: „ÉÜ„Ç≠„Çπ„ÉàÂèñÂæó„Å®Ë°®Á§∫  
            // ========================================
            log('\n„Äê„Çπ„ÉÜ„ÉÉ„Éó9„Äë„ÉÜ„Ç≠„Çπ„ÉàÂèñÂæó„Å®Ë°®Á§∫', 'step');
            
            // „ÉÜ„Ç≠„Çπ„ÉàÂèñÂæó„ÅÆÊîπÂñÑÁâàÔºàui-selectors„Çí‰ΩøÁî®Ôºâ
            let responseText = '';
            
            // ui-selectors„Åã„ÇâÂèñÂæó„ÄÅ„Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØ‰ªò„Åç
            const textSelectors = ChatGPTSelectors.TEXT_EXTRACTION || {
                ASSISTANT_MESSAGE: [
                    '[data-message-author-role="assistant"]',
                    'div[class*="agent-turn"]',
                    'div[class*="model-response"]',
                    'article[class*="message"]'
                ],
                MESSAGE_CONTENT: [
                    'div.markdown.prose',
                    'div.markdown',
                    'div[class*="markdown"]',
                    'div.text-base',
                    'div[class*="text-message"]',
                    'div[class*="prose"]'
                ],
                CANVAS_ARTIFACT: [
                    '#canvas-content',
                    '[data-testid="canvas-content"]',
                    'div[class*="canvas"]',
                    'div[class*="artifact"]',
                    '.prose-mirror',
                    '[contenteditable="false"] .markdown'
                ]
            };
            
            // ÊñπÊ≥ï1: „Ç¢„Ç∑„Çπ„Çø„É≥„Éà„É°„ÉÉ„Çª„Éº„Ç∏„Åã„ÇâÂèñÂæó
            for (const msgSelector of textSelectors.ASSISTANT_MESSAGE) {
                const assistantMessages = document.querySelectorAll(msgSelector);
                if (assistantMessages.length > 0) {
                    const lastMessage = assistantMessages[assistantMessages.length - 1];
                    
                    // markdownÂΩ¢Âºè„ÅÆ„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÊé¢„Åô
                    for (const contentSelector of textSelectors.MESSAGE_CONTENT) {
                        const elements = lastMessage.querySelectorAll(contentSelector);
                        for (const elem of elements) {
                            const text = elem.textContent?.trim() || '';
                            if (text && text.length > 10) {
                                responseText = text;
                                log(`„Ç¢„Ç∑„Çπ„Çø„É≥„Éà„É°„ÉÉ„Çª„Éº„Ç∏ÂèñÂæóÊàêÂäü (${contentSelector}): ${text.length}ÊñáÂ≠ó`, 'success');
                                log(`ÊúÄÂàù„ÅÆ100ÊñáÂ≠ó: ${text.substring(0, 100)}...`, 'info');
                                break;
                            }
                        }
                        if (responseText) break;
                    }
                    if (responseText) break;
                }
            }
            
            // ÊñπÊ≥ï2: Canvas/ArtifactÊ©üËÉΩ„ÅÆÂÜÖÂÆπ„ÇíÂèñÂæó
            if (!responseText) {
                for (const selector of textSelectors.CANVAS_ARTIFACT) {
                    const elements = document.querySelectorAll(selector);
                    for (const elem of elements) {
                        // „Ç¢„Ç∑„Çπ„Çø„É≥„Éà„É°„ÉÉ„Çª„Éº„Ç∏ÂÜÖ„Å´„ÅÇ„Çã„ÇÇ„ÅÆ„ÅØÈô§Â§ñ
                        if (!elem.closest('[data-message-author-role]')) {
                            const text = elem.textContent?.trim() || '';
                            if (text && text.length > 10) {
                                responseText = text;
                                log(`Canvas/ArtifactÂèñÂæóÊàêÂäü (${selector}): ${text.length}ÊñáÂ≠ó`, 'success');
                                log(`ÊúÄÂàù„ÅÆ100ÊñáÂ≠ó: ${text.substring(0, 100)}...`, 'info');
                                break;
                            }
                        }
                    }
                    if (responseText) break;
                }
            }
            
            if (responseText) {
                console.log('‚úÖ ChatGPT V2 „Çø„Çπ„ÇØÂÆüË°åÂÆå‰∫Ü');
                return {
                    success: true,
                    response: responseText
                };
            } else {
                throw new Error('ÂøúÁ≠î„ÉÜ„Ç≠„Çπ„Éà„ÇíÂèñÂæó„Åß„Åç„Åæ„Åõ„Çì„Åß„Åó„Åü');
            }
            
        } catch (error) {
            console.error('‚ùå ChatGPT V2 „Çø„Çπ„ÇØÂÆüË°å„Ç®„É©„Éº:', error);
            return {
                success: false,
                error: error.message
            };
        }
    }
    
    // ========================================
    // runAutomationÈñ¢Êï∞ÔºàÂæåÊñπ‰∫íÊèõÊÄßÔºâ
    // ========================================
    async function runAutomation(config) {
        return executeTask({
            model: config.model,
            function: config.function,
            prompt: config.text || config.prompt
        });
    }
    
    // ========================================
    // „Ç∞„É≠„Éº„Éê„É´ÂÖ¨Èñã
    // ========================================
    window.ChatGPTAutomationV2 = {
        executeTask,
        runAutomation
    };
    
    console.log('‚úÖ ChatGPT Automation V2 Ê∫ñÂÇôÂÆå‰∫Ü');
    console.log('‰ΩøÁî®ÊñπÊ≥ï: ChatGPTAutomationV2.executeTask({ model: "GPT-4o", function: "Deep Research", prompt: "..." })');
    
})();