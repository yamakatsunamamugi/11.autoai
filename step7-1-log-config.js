// „É≠„Ç∞„É¨„Éô„É´Ë®≠ÂÆö„ÅÆÂÖ±ÈÄö„Ç≥„Éº„Éâ
// ÂêÑ„Éï„Ç°„Ç§„É´„ÅÆÂÖàÈ†≠„Åß„Åì„ÅÆ„Ç≥„Éº„Éâ„Çí‰ΩøÁî®

// „É≠„Ç∞„É¨„Éô„É´ÂÆöÁæ©
const LOG_LEVEL = { ERROR: 1, WARN: 2, INFO: 3, DEBUG: 4 };

// Chrome Storage„Åã„Çâ„É≠„Ç∞„É¨„Éô„É´„ÇíÂèñÂæóÔºàÈùûÂêåÊúüÔºâ
let CURRENT_LOG_LEVEL = LOG_LEVEL.WARN; // „Éá„Éï„Ç©„É´„ÉàÂÄ§ÔºàÁ∞°ÊΩî„Å™Âãï‰ΩúÁ¢∫Ë™çÁî®Ôºâ

// ChromeÊã°ÂºµÁí∞Â¢É„Åß„ÅÆ„ÅøStorage„Åã„ÇâË®≠ÂÆö„ÇíË™≠„ÅøËæº„ÇÄ
if (typeof chrome !== "undefined" && chrome.storage && chrome.storage.local) {
  chrome.storage.local.get("logLevel", (result) => {
    if (result.logLevel) {
      CURRENT_LOG_LEVEL = parseInt(result.logLevel);
      console.log(
        `üìã „É≠„Ç∞„É¨„Éô„É´Ë®≠ÂÆö: ${["", "ERROR", "WARN", "INFO", "DEBUG"][CURRENT_LOG_LEVEL]}`,
      );
    }
  });
}

// „É≠„Ç∞„É¶„Éº„ÉÜ„Ç£„É™„ÉÜ„Ç£
const log = {
  error: (...args) => {
    if (CURRENT_LOG_LEVEL >= LOG_LEVEL.ERROR) console.error(...args);
  },
  warn: (...args) => {
    if (CURRENT_LOG_LEVEL >= LOG_LEVEL.WARN) console.warn(...args);
  },
  info: (...args) => {
    if (CURRENT_LOG_LEVEL >= LOG_LEVEL.INFO) console.log(...args);
  },
  debug: (...args) => {
    if (CURRENT_LOG_LEVEL >= LOG_LEVEL.DEBUG) console.log(...args);
  },
};

// „Ç®„ÇØ„Çπ„Éù„Éº„Éà
if (typeof module !== "undefined" && module.exports) {
  module.exports = { LOG_LEVEL, CURRENT_LOG_LEVEL, log };
}
